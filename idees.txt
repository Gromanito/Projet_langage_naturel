ahhhh



est ce que je stocke chaque base


genre j'ai les trucs que j'ai recup de la requete de l'user

chat r_agent-1 griffe
soudeur r_agent-1 souder
tour_effeil se_situe Paris


là en fichier j'ai chat, griffe, soudeur, souder, tour_eiffel, Paris


est ce que pour chacun de ces termes je stocke en eux
les noeuds associés à eux (par type de noeuds)
c'est à dire 
j'ai des objets (que je créerai) "chat", "griffer" ...


dans ces objets y a des attributs
"dico r_isa" 
"dico n_term" 
"dico has_part"
"dico r_agent-1"

et j'ai plein de dico comme ça pour chaque relation (inconvénient : bcp de dico pour potentiellement bcp d'objets)

ou alooooors 

j'ai "pas bcp de dico"
genre j'ai en tout 
"dico r_isa" 
"dico n_term" 
"dico has_part"
"dico r_agent-1"

et dedans par exemple j'ai  "chat" : [une liste avec tout ce qu'est un chat]


pour le n_term
me faudrait un dico de nid -> "nom du terme"

comme ça pendant les inférences ça manipule des id, on s'en fout un peu
et quand on donne l'explication, on donne pas les id mais les noms des choses


j'ai un dicionnaire "r_isa"    chat-> [liste de tout ce que peut être un chat]
j'ai un dicionnaire "r_agent-1"      chat-> [liste de tout ... blabla]         




du couuuuup


dans le main 
j'aurais quelques dictionnaires des noeuds importants
(n_term pour faire le lien identifiant/nom des objets,
r_agent-1 prck on va bpc l'utiliser
r_haspart aussi
et d'autres relations)

ces dicionnaires seront vides au début

puis on pourra charger par exemple matou
arborescence

res/fichiersExploitables/matou/r_isa.json   
res/fichiersExploitables/matou/n_term.json
res/fichiersExploitables/matou/r_haspart.json
                etc 

ces fichiers json sont des listes (qui contiennent tous les trucs quoi jsp)
et quand j'en ai besoin j'ajoute dans r_isa dico
une clé "matou" et une liste : [le fichier /matou/r_isa.json   ]